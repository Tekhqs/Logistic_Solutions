@{
    ViewBag.Title = "Home Page";
    Layout = "~/Views/Shared/_LayoutLS.cshtml";
}
<section class="btnTopSection">
    <div class="row">
        <div class=" form-row col-md-12 TiteSEction pl-5">
            <div class="col-md-3">
                <div class="col-md-11" style="height:80px; background-color:#2ED8B6; display:block; margin-left:auto"></div>
                <div id="graph1" style=" height: 400px; margin: 0 auto"></div>
            </div>
            <div class="col-md-3">
                <div class="col-md-11" style="height:80px; background-color:#FFB64D; display:block; margin-left:auto"></div>

                <div id="graph2" style=" height: 400px; margin: 0 auto"></div>
            </div>
            <div class="col-md-3">
                <div class="col-md-11" style="height:80px; background-color:#4099FF; display:block; margin-left:auto"></div>

                <div id="graph3" style=" height: 400px; margin: 0 auto"></div>
            </div>
            <div class="col-md-3">
                <div class="col-md-11" style="height:80px; background-color:#FF5370; display:block; margin-left:auto"></div>

                <div id="graph4" style=" height: 400px; margin: 0 auto"></div>
            </div>

        </div>

    </div>

</section>
<section class="btnTopSection">
    <div class="row">
        <div class=" form-row col-md-12 TiteSEction pl-5">
            <div class="col-md-3">

                <div id="graph5" style=" height: 400px; margin: 0 auto"></div>
            </div>
            @*<div class="offset-1"></div>*@
            <div class="col-md-3">
                <div id="graph6" style=" height: 400px; margin: 0 auto"></div>
            </div>
            @*<div class="offset-1"></div>*@
            <div class="col-md-3">
                <div id="graph7" style=" height: 400px; margin: 0 auto"></div>
            </div>
            @*<div class="offset-1"></div>*@
            <div class="col-md-3">
                <div id="graph8" style=" height: 400px; margin: 0 auto"></div>
            </div>

        </div>

    </div>

</section>
<section class="TableSection ">
    <div class="row">
        <div class="col-md-2 TiteSEction pl-5">
            <p class="LayoutsH1">
                Order Details
            </p>
        </div>
        <div class="col-md-10 LinksSEction">
            <a class="LayoutActionLink" href="#">
                Today
            </a>
            <a class="LayoutActionLink" href="#">
                Week
            </a>
            <a class="LayoutActionLink" href="#">
                Month
            </a>
        </div>

    </div>
    <table id="example" class="display nowrap" style="width:100%">
        <thead class="THeader">

            <tr>
                <th> <input type="checkbox" class="TblCHk">OrderId</th>
                <th>Shipping Adress</th>
                <th>Shipping Date</th>
                <th>Status</th>
                <th>Type</th>
                <th>User Details</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ViewBag.orders)
            {
                <tr>

                    <td><input type="checkbox" class="TblCHk">@item.OrderId</td>
                    <td>@item.ShippingAdress</td>
                    <td>@item.ShippingDate</td>
                    @if (item.Status == "Pending")
                    {
                        <td><span class="red"> @item.Status</span></td>

                    }
                    else if (item.Status == "Unpaid")
                    {

                        <td><span class="purple"> @item.Status</span></td>

                    }
                    else
                    {
                        <td><span class="green"> @item.Status</span></td>

                    }
                    @if (item.type == "Online")
                    {
                        <td><span class="skyBlue"> @item.type</span></td>

                    }

                    else
                    {
                        <td><span class="orange"> @item.type</span></td>

                    }
                    <td><span class="red">click here</span></td>
                    <td class="ActionsEdit"><i class="far fa-edit"></i> <i class="fas fa-trash-alt red"></i></td>
                </tr>

            }

        </tbody>
    </table>

</section>







<script src="https://code.highcharts.com/highcharts.js"></script>
<script src="https://code.highcharts.com/modules/series-label.js"></script>
<script src="https://code.highcharts.com/modules/exporting.js"></script>
<script src="https://code.highcharts.com/modules/export-data.js"></script>

<script src="https://code.highcharts.com/highcharts-more.js"></script>
<script src="https://code.highcharts.com/modules/solid-gauge.js"></script>
<script src="https://code.highcharts.com/modules/accessibility.js"></script>

<script>
    $.ajax({
        url: "/Home/DonutChart",
        type: "POST",
        dataType: "JSON",
        
        success: function (result) {
            debugger;
    //Graph1

            Highcharts.chart('graph1', {

                title: {
                    text: ''
                },

                xAxis: {
                    tickInterval: 1,
                    type: 'logarithmic'
                },

                yAxis: {
                    type: 'logarithmic',
                    minorTickInterval: 0.1
                },

                tooltip: {
                    headerFormat: '',
                    pointFormat: 'x = {point.x}, y = {point.y}'
                },

                series: [{
                    data: result.parcels,
                    pointStart: 1,
                    color: "#00e6ac",
                    name: 'All Parcels'

                }]
            });

    //Graph1Ends

            //Graph2
            Highcharts.chart('graph2', {

                title: {
                    text: ''
                },

                xAxis: {
                    tickInterval: 1,
                    type: 'logarithmic'
                },

                yAxis: {
                    type: 'logarithmic',
                    minorTickInterval: 0.1
                },

                tooltip: {
                    headerFormat: '<b>{All Parcel}</b><br />',
                    pointFormat: 'x = {point.x}, y = {point.y}'
                },

                series: [{
                    data: result.order,
                    pointStart: 1,
                    color: "#FFB64D",
                    name: 'All Orders'

                }]
            });

    //Graph2Ends

            //Graph3
            Highcharts.chart('graph3', {

                title: {
                    text: ''
                },

                xAxis: {
                    tickInterval: 1,
                    type: 'logarithmic'
                },

                yAxis: {
                    type: 'logarithmic',
                    minorTickInterval: 0.1
                },

                tooltip: {
                    headerFormat: '<b>{series.name}</b><br />',
                    pointFormat: 'x = {point.x}, y = {point.y}'
                },

                series: [{
                    data: result.receiving,
                    pointStart: 1,
                    color: "#4099FF",
                    name: 'All Receiving'

                }]
            });

    //Graph3Ends
            //Graph4
            Highcharts.chart('graph4', {

                title: {
                    text: ''
                },

                xAxis: {
                    tickInterval: 1,
                    type: 'logarithmic'
                },

                yAxis: {
                    type: 'logarithmic',
                    minorTickInterval: 0.1
                },

                tooltip: {
                    headerFormat: '<b>{series.name}</b><br />',
                    pointFormat: 'x = {point.x}, y = {point.y}'
                },

                series: [{
                    data: result.users,
                    pointStart: 1,
                    color: "#FF5370",
                    name: 'All Users'
                }]
            });

    //Graph4Ends

            //Graph5
            Highcharts.chart('graph5', {
                chart: {
                    type: 'spline'
                },
                title: {
                    text: 'Daily Send and receive orders'
                },
                //subtitle: {
                //    text: 'Source: WorldClimate.com'
                //},
                xAxis: {
                    categories: ['Mon', 'Tue', 'Wed', 'Thursday', 'Friday', 'Saturday', 'Sunday']
                },
                yAxis: {
                    title: {
                        text: 'Orders'
                    },
                    labels: {
                        formatter: function () {
                            return this.value + '°';
                        }
                    }
                },
                tooltip: {
                    crosshairs: true,
                    shared: true
                },
                plotOptions: {
                    spline: {
                        marker: {
                            radius: 4,
                            lineColor: '#3B53DB',
                            lineWidth: 1
                        }
                    }
                },
                series: [{
                    name: 'Upcomming',
                    //marker: {
                    //    symbol: 'square'
                    //},
                    data: result.sROrderY

                }, {
                    name: 'Incomming',
                    //marker: {
                    //    symbol: 'diamond'
                    //},
                    data: result.sROrderX
                }]
            });

    //Graph5Ends
            //Graph6
    // Create the chart

            Highcharts.chart('graph6', {
                chart: {
                    type: 'column'
                },
                title: {
                    text: 'Monthly receive Orders'
                },
                //subtitle: {
                //    text: 'Click the columns to view versions. Source: <a href="http://statcounter.com" target="_blank">statcounter.com</a>'
                //},
                accessibility: {
                    announceNewData: {
                        enabled: true
                    }
                },
                xAxis: {
                    type: 'category'
                },
                yAxis: {
                    title: {
                        text: 'Receiving Orders'
                    }

                },
                legend: {
                    enabled: false
                },
                plotOptions: {
                    series: {
                        borderWidth: 0,
                        dataLabels: {
                            enabled: true,
                            format: '{point.y:.1f}%'
                        }
                    }
                },

                tooltip: {
                    headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                    pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>'
                },

                series: [
                    {
                        name: "Months",
                        colorByPoint: true,
                        data: [

                            {
                                name: "Jan",
                                y: result.mROrderY[0],
                                drilldown: "Jan"
                            },
                            {
                                name: "Feb",
                                y: result.mROrderY[1],
                                drilldown: "Feb"
                            },
                            {
                                name: "March",
                                y: result.mROrderY[2],
                                drilldown: "March"
                            },
                            {
                                name: "April",
                                y: result.mROrderY[3],
                                drilldown: "April"
                            },
                            {
                                name: "May",
                                y: result.mROrderY[4],
                                y: 4.02,
                                drilldown: "May"
                            },
                            {
                                name: "June",
                                y: result.mROrderY[5],
                                drilldown: "June"
                            },
                            {
                                name: "July",
                                y: result.mROrderY[6],
                                drilldown: "July"
                            },
                            {
                                name: "Aug",
                                y: result.mROrderY[7],
                                drilldown: "Aug"
                            }, {
                                name: "Sept",
                                y: result.mROrderY[8],
                                drilldown: "Sept"
                            }, {
                                name: "Oct",
                                y: result.mROrderY[9],
                                drilldown: "Oct"
                            }, {
                                name: "Nov",
                                y: result.mROrderY[10],
                                drilldown: "Nov"
                            }, {
                                name: "Dec",
                                y: result.mROrderY[11],
                                drilldown: "Dec"
                            },

                        ]
                    }
                ],
            });
                //Graph6Ends


            //Graph7
            // Create the chart

            Highcharts.chart('graph7', {
                chart: {
                    type: 'column'
                },
                title: {
                    text: 'Monthly Shipping Orders'
                },
                //subtitle: {
                //    text: 'Click the columns to view versions. Source: <a href="http://statcounter.com" target="_blank">statcounter.com</a>'
                //},
                accessibility: {
                    announceNewData: {
                        enabled: true
                    }
                },
                xAxis: {
                    type: 'category'
                },
                yAxis: {
                    title: {
                        text: 'Shipping Orders'
                    }

                },
                legend: {
                    enabled: false
                },
                plotOptions: {
                    series: {
                        borderWidth: 0,
                        dataLabels: {
                            enabled: true,
                            format: '{point.y:.1f}%'
                        }
                    }
                },

                tooltip: {
                    headerFormat: '<span style="font-size:11px">{series.name}</span><br>',
                    pointFormat: '<span style="color:{point.color}">{point.name}</span>: <b>{point.y:.2f}%</b> of total<br/>'
                },

                series: [
                    {
                        name: "Months",
                        colorByPoint: true,
                        data: [

                            {
                                name: "Jan",
                                y: result.mSOrderY[0],
                                drilldown: "Jan"
                            },
                            {
                                name: "Feb",
                                y: result.mSOrderY[1],
                                drilldown: "Feb"
                            },
                            {
                                name: "March",
                                y: result.mSOrderY[2],
                                drilldown: "March"
                            },
                            {
                                name: "April",
                                y: result.mSOrderY[3],
                                drilldown: "April"
                            },
                            {
                                name: "May",
                                y: result.mSOrderY[4],
                                y: 4.02,
                                drilldown: "May"
                            },
                            {
                                name: "June",
                                y: result.mSOrderY[5],
                                drilldown: "June"
                            },
                            {
                                name: "July",
                                y: result.mSOrderY[6],
                                drilldown: "July"
                            },
                            {
                                name: "Aug",
                                y: result.mSOrderY[7],
                                drilldown: "Aug"
                            }, {
                                name: "Sept",
                                y: result.mSOrderY[8],
                                drilldown: "Sept"
                            }, {
                                name: "Oct",
                                y: result.mSOrderY[9],
                                drilldown: "Oct"
                            }, {
                                name: "Nov",
                                y: result.mSOrderY[10],
                                drilldown: "Nov"
                            }, {
                                name: "Dec",
                                y: result.mSOrderY[11],
                                drilldown: "Dec"
                            },

                        ]
                    }
                ],
            });
                //Graph7Ends

            function renderIcons() {

                // Move icon
                if (!this.series[0].icon) {
                    this.series[0].icon = this.renderer.path(['M', -8, 0, 'L', 8, 0, 'M', 0, -8, 'L', 8, 0, 0, 8])
                        .attr({
                            stroke: '#303030',
                            'stroke-linecap': 'round',
                            'stroke-linejoin': 'round',
                            'stroke-width': 2,
                            zIndex: 10
                        })
                        .add(this.series[2].group);
                }
                this.series[0].icon.translate(
                    this.chartWidth / 2 - 10,
                    this.plotHeight / 2 - this.series[0].points[0].shapeArgs.innerR -
                    (this.series[0].points[0].shapeArgs.r - this.series[0].points[0].shapeArgs.innerR) / 2
                );

                // Exercise icon
                if (!this.series[1].icon) {
                    this.series[1].icon = this.renderer.path(
                        ['M', -8, 0, 'L', 8, 0, 'M', 0, -8, 'L', 8, 0, 0, 8,
                            'M', 8, -8, 'L', 16, 0, 8, 8]
                    )
                        .attr({
                            stroke: '#ffffff',
                            'stroke-linecap': 'round',
                            'stroke-linejoin': 'round',
                            'stroke-width': 2,
                            zIndex: 10
                        })
                        .add(this.series[2].group);
                }
                this.series[1].icon.translate(
                    this.chartWidth / 2 - 10,
                    this.plotHeight / 2 - this.series[1].points[0].shapeArgs.innerR -
                    (this.series[1].points[0].shapeArgs.r - this.series[1].points[0].shapeArgs.innerR) / 2
                );

                // Stand icon
                if (!this.series[2].icon) {
                    this.series[2].icon = this.renderer.path(['M', 0, 8, 'L', 0, -8, 'M', -8, 0, 'L', 0, -8, 8, 0])
                        .attr({
                            stroke: '#303030',
                            'stroke-linecap': 'round',
                            'stroke-linejoin': 'round',
                            'stroke-width': 2,
                            zIndex: 10
                        })
                        .add(this.series[2].group);
                }

                this.series[2].icon.translate(
                    this.chartWidth / 2 - 10,
                    this.plotHeight / 2 - this.series[2].points[0].shapeArgs.innerR -
                    (this.series[2].points[0].shapeArgs.r - this.series[2].points[0].shapeArgs.innerR) / 2
                );
            }

            Highcharts.chart('graph8', {

                chart: {
                    type: 'solidgauge',
                    height: '110%',
                    events: {
                        render: renderIcons
                    }
                },

                title: {
                    text: 'Revenue Statistics',
                    style: {
                        fontSize: '24px'
                    }
                },

                tooltip: {
                    borderWidth: 0,
                    backgroundColor: 'none',
                    shadow: false,
                    style: {
                        fontSize: '16px'
                    },
                    valueSuffix: '%',
                    pointFormat: '{series.name}<br><span style="font-size:2em; color: {point.color}; font-weight: bold">{point.y}</span>',
                    positioner: function (labelWidth) {
                        return {
                            x: (this.chart.chartWidth - labelWidth) / 2,
                            y: (this.chart.plotHeight / 2) + 15
                        };
                    }
                },

                pane: {
                    startAngle: 0,
                    endAngle: 360,
                    background:
                        [
                            { // Track for Move
                                outerRadius: '112%',
                                innerRadius: '88%',
                                backgroundColor: Highcharts.Color(Highcharts.getOptions().colors[0])
                                    .setOpacity(0.3)
                                    .get(),
                                borderWidth: 0
                            },



                        ]
                },

                yAxis: {
                    min: 0,
                    max: 100,
                    lineWidth: 0,
                    tickPositions: []
                },

                plotOptions: {
                    solidgauge: {
                        dataLabels: {
                            enabled: false
                        },
                        linecap: 'round',
                        stickyTracking: false,
                        rounded: true
                    }
                },

                series: [
                    {
                        name: 'Revenue',
                        data: [{
                            color: Highcharts.getOptions().colors[0],
                            radius: '112%',
                            innerRadius: '88%',
                            y: result.revenue
                        }]
                    },




                ]
            });
        },
        error: function (error) {
            console.log(error);
        },
    })

    
    

   



    

</script>